



Workload Identity in Multi System Environments              M. Levy, Ed.
Internet-Draft                                                     SPIRL
Intended status: Informational                              9 April 2025
Expires: 11 October 2025


                   WIMSE Headless JWT Authentication
     draft-levy-wimse-headless-jwt-authentication-practices-latest

Abstract

   TODO Abstract

About This Document

   This note is to be removed before publishing as an RFC.

   The latest revision of this draft can be found at
   https://heymarcel.github.io/draft-ietf-wimse-headless-jwt-
   authentication/draft-levy-wimse-headless-jwt-authentication-
   practices.html.  Status information for this document may be found at
   https://datatracker.ietf.org/doc/draft-levy-wimse-headless-jwt-
   authentication-practices/.

   Discussion of this document takes place on the Workload Identity in
   Multi System Environments mailing list (mailto:wimse@ietf.org), which
   is archived at https://mailarchive.ietf.org/arch/browse/wimse/.
   Subscribe at https://www.ietf.org/mailman/listinfo/wimse/.

   Source for this draft and an issue tracker can be found at
   https://github.com/heymarcel/draft-ietf-wimse-headless-jwt-
   authentication.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 11 October 2025.

Copyright Notice

   Copyright (c) 2025 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  Introduction
   2.  Architecture and Message Flow
   3.  Conventions and Definitions
   4.  JWT used for Authentication
   5.  Key Discovery
   6.  JWT Format and Processing Requirements
     6.1.  JWT Format
     6.2.  JWT Processsing
     6.3.  JWT Provisioning
   7.  Security Considerations
   8.  IANA Considerations
   9.  Normative References
   Acknowledgments
   Author's Address

1.  Introduction

   In service-to-service communication, a common pattern is to use a
   JSON Web Token (JWT) for authentication purposes.  This is done by
   having the workload (i.e. service) present a bearer token in the form
   of a signed JWT, which is then verified by the receiving party.  The
   "bootstrap" problem of establishing the signing JWK is solved by
   using an OpenID Connect Discovery Point [OIDC.Discovery].

   Since this pattern is not described in a specification, it leads to
   variability in practice.  The purpose of this document is to capture
   this common workload identity authentication practice as an RFC in
   order to obtain consistency and promote interoperability in industry.

2.  Architecture and Message Flow

   TODO - ASCII Diagram showing the flow between the client with a JWT,
   the Server receiving it and the OIDC endpoint from which the keys are
   retrieved.

   Figure 1 illustrates the message flow described in Section 4:

                            2) GET /.well-known/openid-configuration
                     +-----------------------------------------+
                     |                                         |
                     |                                +--------v----------------+
      +--------------v--+                             |                         |
      |                 |                             |      JWT Issuer/        |
      |    Resource     <----------------------------->  Authorization Server   |
      |     Server      |   3) Retrieve JWKs          |                         |
      |                 |      from "jwks_uri"        +-------------------------+
      +---^-------+-----+
          |       |       4) Verify signature
          |       |          using JWK
          |       |
1) JWT    |       |
   Bearer |       |  5) Response after
   Token  |       |     verification
          |       |
          |       |
      +---+-------v-----+
      |                 |
      |    Workload     |
      |                 |
      +-----------------+

   Figure 1: OIDC message flow when used in a headless environment

3.  Conventions and Definitions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

4.  JWT used for Authentication

   The overall message flow is seen in Figure 1, and this section
   explains it in more detail.  It assumes the workload has previously
   acquired a JWT adhering to the profile specified in [RFC7523].  This
   JWT provisioning process is described in more detail in Section 6.3.

   1.  The workload calls a Resource Server over HTTP and presents a JWT
       Bearer Token as specified in Section 4 of [RFC7521].

   2.  The Resource Server takes the value from the iss claim and
       appends "/.well-known/openid-configuration" to retrieve the
       Authorization Server's configuration via HTTP, as specified in
       [OIDC.Discovery].

   3.  The Resource Server then retrieves the JWKs via HTTP from the
       jwks_uri declared in the Authorization Server's configuration
       response.

   4.  Using the appropiate issuer key, the Resource Server verifies the
       signature of the JWT Bearer Token.

   5.  The Resource Server then responds to the workload according to
       the outcome of the signature verification.

   This document limits discussion to HTTP, as this is the protocol
   predominantly used.  Although other protocols are out of scope, this
   should not be read as a limit on their future use.

5.  Key Discovery

   TODO describes the key discovery mechanism - refer to OIDC discovery
   mechanisms.

6.  JWT Format and Processing Requirements

6.1.  JWT Format

   TODO - describe claims and format of JWT needed.

6.2.  JWT Processsing

   TODO - how should the client and server process the JWT (verification
   etc)

6.3.  JWT Provisioning

   TODO - describe where the JWT may come from.  Who issues it etc
   (could also be a security consideration)

7.  Security Considerations

   1.  A secure channel (i.e. TLS) MUST be used when providing a JWT for
       authentication.

8.  IANA Considerations

   This document has no IANA actions.

9.  Normative References

   [OIDC.Discovery]
              Sakimura, N., Bradley, J., Jones, M., and E. Jay, "OpenID
              Connect Discovery 1.0 incorporating errata set 2", 2023,
              <https://openid.net/specs/openid-connect-discovery-
              1_0.html>.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/rfc/rfc2119>.

   [RFC6749]  Hardt, D., Ed., "The OAuth 2.0 Authorization Framework",
              RFC 6749, DOI 10.17487/RFC6749, October 2012,
              <https://www.rfc-editor.org/rfc/rfc6749>.

   [RFC7521]  Campbell, B., Mortimore, C., Jones, M., and Y. Goland,
              "Assertion Framework for OAuth 2.0 Client Authentication
              and Authorization Grants", RFC 7521, DOI 10.17487/RFC7521,
              May 2015, <https://www.rfc-editor.org/rfc/rfc7521>.

   [RFC7523]  Jones, M., Campbell, B., and C. Mortimore, "JSON Web Token
              (JWT) Profile for OAuth 2.0 Client Authentication and
              Authorization Grants", RFC 7523, DOI 10.17487/RFC7523, May
              2015, <https://www.rfc-editor.org/rfc/rfc7523>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/rfc/rfc8174>.

Acknowledgments

   TODO acknowledge.

Author's Address

   Marcel Levy (editor)
   SPIRL
   Email: heymarcel@gmail.com
