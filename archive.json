{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2025-04-29T00:02:24.572093+00:00",
  "repo": "heymarcel/draft-ietf-wimse-headless-jwt-authentication",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [
    {
      "number": 1,
      "id": "I_kwDOOVtHv86xlvim",
      "title": "Change Title",
      "url": "https://github.com/heymarcel/draft-ietf-wimse-headless-jwt-authentication/issues/1",
      "state": "CLOSED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Suggest to drop the \"Practices\" from the specification - WIMSE Headless JWT Authentication",
      "createdAt": "2025-04-08T11:15:50Z",
      "updatedAt": "2025-04-08T15:29:24Z",
      "closedAt": "2025-04-08T15:29:23Z",
      "comments": [
        {
          "author": "heymarcel",
          "authorAssociation": "OWNER",
          "body": "Agreed. Changed as part of merge from PR #2 ",
          "createdAt": "2025-04-08T15:29:23Z",
          "updatedAt": "2025-04-08T15:29:23Z"
        }
      ]
    },
    {
      "number": 3,
      "id": "I_kwDOOVtHv86y2rYT",
      "title": "Simplify diagram",
      "url": "https://github.com/heymarcel/draft-ietf-wimse-headless-jwt-authentication/issues/3",
      "state": "OPEN",
      "author": "heymarcel",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "* Take out the call to `/.well-known/openid-configuration` -- we can just explain elsewhere in the document.\n* Number the \"initial provisioning\" step, and add to \"JWT used for Authentication\"\n",
      "createdAt": "2025-04-16T20:32:10Z",
      "updatedAt": "2025-04-16T20:32:10Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 4,
      "id": "I_kwDOOVtHv86y2r_R",
      "title": "Fill out \"JWT Format\" and \"JWT Processing\"",
      "url": "https://github.com/heymarcel/draft-ietf-wimse-headless-jwt-authentication/issues/4",
      "state": "CLOSED",
      "author": "heymarcel",
      "authorAssociation": "OWNER",
      "assignees": [
        "heymarcel"
      ],
      "labels": [],
      "body": "See the TODOs.",
      "createdAt": "2025-04-16T20:33:41Z",
      "updatedAt": "2025-04-25T01:05:33Z",
      "closedAt": "2025-04-25T01:05:33Z",
      "comments": [
        {
          "author": "heymarcel",
          "authorAssociation": "OWNER",
          "body": "Added an example JWT in this commit: 4643dd74e3ff84abb925d434518922372e02940a",
          "createdAt": "2025-04-16T22:31:18Z",
          "updatedAt": "2025-04-16T22:31:28Z"
        }
      ]
    },
    {
      "number": 5,
      "id": "I_kwDOOVtHv86y2tC1",
      "title": "Add more detail to \"JWT Provisioning\"",
      "url": "https://github.com/heymarcel/draft-ietf-wimse-headless-jwt-authentication/issues/5",
      "state": "OPEN",
      "author": "heymarcel",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "We can reference the Client Credentials flow here, for example.",
      "createdAt": "2025-04-16T20:35:35Z",
      "updatedAt": "2025-04-16T20:35:35Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 6,
      "id": "I_kwDOOVtHv86y2tSL",
      "title": "Address the issue of client registration",
      "url": "https://github.com/heymarcel/draft-ietf-wimse-headless-jwt-authentication/issues/6",
      "state": "OPEN",
      "author": "heymarcel",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "It's not mentioned at all in the spec, but it does need to be dealt with.",
      "createdAt": "2025-04-16T20:36:10Z",
      "updatedAt": "2025-04-16T20:36:10Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 8,
      "id": "I_kwDOOVtHv860XGa7",
      "title": "\"Client ID Context\" problem - how does the receiving domain figure out which client ID is being authenticated?",
      "url": "https://github.com/heymarcel/draft-ietf-wimse-headless-jwt-authentication/issues/8",
      "state": "OPEN",
      "author": "hpsin",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "In [RFC 6749 #3.2.1](https://datatracker.ietf.org/doc/html/rfc6749#section-3.2.1) and 4.4, we find that it doesn't appear to be mandatory for a client_credentials caller to actually specify which client_id they intend to authenticate for. The client secret is assumed to be sufficient to figure out which client_id is being authenticated. \n\nThat's not true though for these federated credentials - it's reasonable to say that a workload in the issuing domain is allowed to sign in to 3 different receiving domain `client_id`s with the same issuer/sub/aud claims. As a result, if the receiving AS gets a request with this JWT and no identifying client_id, it can't accurately deduce which client_id to issue a token for. \n\nSo... given a bare JWT and some scopes, how does the receiving domain know which client ID to sign in for?\nGitHub has this problem here: https://docs.github.com/en/rest/apps/apps?apiVersion=2022-11-28#get-the-authenticated-app\n\nAnd in general the [installation token API](https://docs.github.com/en/rest/apps/apps?apiVersion=2022-11-28#create-an-installation-access-token-for-an-app) does not indicate which GitHub App is being signed into. Instead, we look for the `appid` in the JWT, and ensure that the installation ID is a valid installation for that app. \n\nNon-standard implementations of this pattern, and even standard implementations (assuming that the client_credentials flow will be the standard path here) will require some amount of help to identify the client_id.\n\nOptions I can think of that solve some or all of the issue: \n1. A `client_id` claim in the JWT?\n    * Some better name for that claim that makes it clear it's the client ID in the receiving domain?\n2. Indicate that `client_ID` is required in this scenario for all flows. \n   * For scenarios that aren't client credentials (so all my GitHub scenarios), require support for a parameter that represents the client ID\n3. Mandate that the triplet of issuer/subject/audience is unique within a receiving domain - only one client_id can use a particular triplet. \n\nAll of these are problematic:\n1. Claim injection is not evenly supported in many IDPs. For example, they can be injected in Entra but only via relatively expensive [custom claims](https://learn.microsoft.com/en-us/entra/identity-platform/custom-claims-provider-reference) or fixed-format claims which would not match a standardized claim (`extn_{GUID for the client}_claimname`). \n2. This is a compat issue for existing code that wants to update from using self-signed JWTs in client_credentials flows to issued JWTs. It doesn't always fit cleanly into existing APIs either - e.g. `/app` on GitHub, do we accept a query parameter there? A bit ugly. \n3. This is a scenario blocker for users. It's reasonable that we have cardinality mismatches between the domains - i.e. one production workload in the issuing domain, but test, dev, and prod clients in the receiving domain that all need to trust the same workload's JWT. ",
      "createdAt": "2025-04-28T19:31:02Z",
      "updatedAt": "2025-04-28T19:31:02Z",
      "closedAt": null,
      "comments": []
    }
  ],
  "pulls": [
    {
      "number": 2,
      "id": "PR_kwDOOVtHv86RxaHM",
      "title": "Adding Document Skeleton",
      "url": "https://github.com/heymarcel/draft-ietf-wimse-headless-jwt-authentication/pull/2",
      "state": "MERGED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Fleshing out the specification topics",
      "createdAt": "2025-04-08T11:28:51Z",
      "updatedAt": "2025-04-08T14:07:30Z",
      "baseRepository": "heymarcel/draft-ietf-wimse-headless-jwt-authentication",
      "baseRefName": "main",
      "baseRefOid": "89db246d20ea4c7f7592e935e8e4e9bf22afd3cb",
      "headRepository": "PieterKas/draft-ietf-wimse-headless-jwt-authentication",
      "headRefName": "patch-1",
      "headRefOid": "dd771b4f061dde273898ccefddbd990045942741",
      "closedAt": "2025-04-08T14:07:30Z",
      "mergedAt": "2025-04-08T14:07:30Z",
      "mergedBy": "heymarcel",
      "mergeCommit": {
        "oid": "4790196de381af1577edc91fc85edcb695f6c97a"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOOVtHv86j65gR",
          "commit": {
            "abbreviatedOid": "dd771b4"
          },
          "author": "heymarcel",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "Thanks!",
          "createdAt": "2025-04-08T14:05:15Z",
          "updatedAt": "2025-04-08T14:05:15Z",
          "comments": []
        }
      ]
    },
    {
      "number": 7,
      "id": "PR_kwDOOVtHv86T5Urs",
      "title": "Suggested Tweaks",
      "url": "https://github.com/heymarcel/draft-ietf-wimse-headless-jwt-authentication/pull/7",
      "state": "MERGED",
      "author": "PieterKas",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2025-04-25T10:53:19Z",
      "updatedAt": "2025-04-25T16:07:23Z",
      "baseRepository": "heymarcel/draft-ietf-wimse-headless-jwt-authentication",
      "baseRefName": "main",
      "baseRefOid": "e6d2414653511272170caf710af2df013888debf",
      "headRepository": "PieterKas/draft-ietf-wimse-headless-jwt-authentication",
      "headRefName": "patch-2",
      "headRefOid": "1c6145670b247b22f7469701bd76c10941c14a9e",
      "closedAt": "2025-04-25T16:07:23Z",
      "mergedAt": "2025-04-25T16:07:23Z",
      "mergedBy": "heymarcel",
      "mergeCommit": {
        "oid": "68ac58e022120fc5df15f3ba9587532c9c2e52d8"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOOVtHv86mknG3",
          "commit": {
            "abbreviatedOid": "1c61456"
          },
          "author": "heymarcel",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "Thanks!",
          "createdAt": "2025-04-25T16:06:06Z",
          "updatedAt": "2025-04-25T16:06:06Z",
          "comments": []
        }
      ]
    }
  ]
}